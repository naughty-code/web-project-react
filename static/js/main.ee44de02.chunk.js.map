{"version":3,"sources":["Invoice.js","MaterialForm.js","ToolForm.js","ExpenseForm.js","InvoiceForm.js","App.js","serviceWorker.js","index.js"],"names":["Expense","_ref","tipo","descripcion","costo","materiales","herramientas","classes","react_default","a","createElement","Fragment","List_default","map","m","i","ListItem_default","divider","length","ListItemText_default","nombre","cantidad","h","withStyles","card","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","props","cliente","gastos","impresa","Card_default","className","CardContent_default","Typography_default","variant","component","g","Invoice_Expense","index_es","MaterialForm","state","material","handleChange","name","event","_this","setState","Object","defineProperty","target","value","handleClick","onSubmit","_this$props","this","root","FormGroup_default","row","TextField_default","placeholder","onChange","Button_default","color","aria-label","button","onClick","Add_default","React","Component","theme","padding","ToolForm","herramienta","ExpenseForm","handleMaterialSubmit","mat","prevState","toConsumableArray","concat","handleToolSubmit","t","_this$state","src_MaterialForm","src_ToolForm","core_index_es","InvoiceForm","cedula","handleExpenseSubmit","expense","input","inputProps","defaultValue","InputLabel_default","Checkbox_default","src_ExpenseForm","App","invoices","handleSubmit","inv","newInvoice","Grid_default","container","alignItems","justify","direction","item","src_InvoiceForm","src_Invoice","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee44de02.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Done, Clear } from '@material-ui/icons'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n};\r\n\r\nconst Expense = ({tipo, descripcion, costo, materiales, herramientas, classes}) => (\r\n    <React.Fragment>\r\n        <b>Tipo: </b> {tipo}\r\n        <p><b>Descripción:</b> {descripcion}</p>\r\n        <b>Costo: </b> {costo}\r\n        <b>Materiales: </b>\r\n        <List >\r\n            {materiales.map((m, i) => <ListItem divider={i+1 !== materiales.length}><ListItemText>{m.nombre} (cantidad: {m.cantidad})</ListItemText></ListItem>)}\r\n        </List>\r\n        <b>Herramientas: </b>\r\n        <List>\r\n            {herramientas.map((h,i) => <ListItem divider={i+1 !== herramientas.length}><ListItemText>{h}</ListItemText></ListItem>)}\r\n        </List>\r\n    </React.Fragment>\r\n\r\n)\r\n\r\nfunction Invoice(props) {\r\n  const { cliente, gastos, impresa, classes } = props;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          {cliente.nombre}\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          <b>Gastos:</b>\r\n          <List>\r\n              {gastos.map((g, i) =><ListItem divider={i+1 !== gastos.length}><Expense {...g}></Expense></ListItem>)}\r\n          </List>\r\n        </Typography>\r\n        <Typography component=\"p\">\r\n          <b>Impresa: </b>{impresa ? <Done/> : <Clear/>}\r\n        </Typography>\r\n\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nInvoice.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(Invoice);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Card from '@material-ui/core/Card';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        padding: '10px',\r\n        margin: '5px'\r\n    }\r\n  });\r\n\r\nclass MaterialForm extends React.Component {\r\n\r\n    state = {\r\n        material: '',\r\n        cantidad: ''\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onSubmit(this.state);\r\n        this.setState({\r\n            material: '',\r\n            cantidad: ''\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {classes, onSubmit} = this.props;\r\n        return (\r\n            <Card className={classes.root}>\r\n            <FormGroup row>\r\n                <TextField\r\n                        value={this.state.material}\r\n                        placeholder='Material'\r\n                        onChange={this.handleChange('material')}\r\n                    />\r\n                <TextField\r\n                        value={this.state.cantidad}\r\n                        placeholder='Cantidad'\r\n                        onChange={this.handleChange('cantidad')}\r\n                />\r\n                <Button \r\n                    variant=\"fab\"\r\n                    color=\"secondary\"\r\n                    aria-label=\"Add\"\r\n                    className={classes.button}\r\n                    onClick={this.handleClick}    \r\n                >\r\n                    <AddIcon/>\r\n                </Button>\r\n            </FormGroup>\r\n        </Card>\r\n        );\r\n    }\r\n}\r\n\r\nMaterialForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\n  export default withStyles(styles)(MaterialForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Card from '@material-ui/core/Card';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\n\r\nconst styles = theme => ({\r\n    root:{\r\n        padding: '10px',\r\n        margin: '5px'\r\n    }\r\n});\r\n\r\nclass ToolForm extends React.Component {\r\n    state = {\r\n        herramienta: ''\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    handleClick = () => {\r\n        this.props.onSubmit(this.state);\r\n        this.setState({\r\n            herramienta: ''\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {classes, onSubmit} = this.props;\r\n        return (\r\n            <Card className={classes.root}>\r\n            <FormGroup row>\r\n                <TextField\r\n                        value={this.state.herramienta}\r\n                        placeholder='Herramienta'\r\n                        onChange={this.handleChange('herramienta')}\r\n                    />\r\n                <Button \r\n                    variant=\"fab\"\r\n                    color=\"secondary\"\r\n                    aria-label=\"Add\"\r\n                    className={classes.button}\r\n                    onClick={this.handleClick}    \r\n                >\r\n                    <AddIcon/>\r\n                </Button>\r\n            </FormGroup>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nToolForm.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n  };\r\nexport default withStyles(styles)(ToolForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Card from '@material-ui/core/Card';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MaterialForm from './MaterialForm'\r\nimport { List, ListItem } from '@material-ui/core';\r\nimport ToolForm from './ToolForm';\r\n\r\nconst styles = theme => ({\r\n  root:{\r\n      padding: '10px',\r\n      margin: '5px'\r\n  }\r\n});\r\n\r\nclass ExpenseForm extends React.Component {\r\n\r\n    state = {\r\n        tipo: '',\r\n        descripcion: '',\r\n        costo: '',\r\n        materiales: [],\r\n        herramientas: []\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    handleMaterialSubmit = mat => {\r\n        this.setState(prevState => {\r\n            return ({\r\n                materiales: [...prevState.materiales, mat]\r\n            })\r\n        })\r\n    }\r\n    handleToolSubmit = t => {\r\n        this.setState(prevState => {\r\n            return ({\r\n                herramientas: [...prevState.herramientas, t.herramienta]\r\n            })\r\n        })\r\n    }\r\n    handleClick = () => {\r\n        this.props.onSubmit(this.state);\r\n        this.setState({\r\n            tipo: '',\r\n            descripcion: '',\r\n            costo: '',\r\n            materiales: [],\r\n            herramientas: []\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { classes, onSubmit } = this.props;\r\n        const { tipo, descripcion, costo, materiales, herramientas } = this.state;\r\n        return (\r\n            <Card className={classes.root}>\r\n                <Typography>Agregar Costo: </Typography>\r\n                <FormGroup row>\r\n                    <TextField\r\n                        value={tipo}\r\n                        placeholder='Tipo'\r\n                        onChange={this.handleChange('tipo')}\r\n                    />\r\n                    <TextField\r\n                        value={descripcion}\r\n                        placeholder='Descripcion'\r\n                        onChange={this.handleChange('descripcion')}\r\n                    />\r\n                    <TextField\r\n                        value={costo}\r\n                        placeholder='Costo'\r\n                        onChange={this.handleChange('costo')}\r\n                    />\r\n                    \r\n                    <Button \r\n                        variant=\"fab\"\r\n                        color=\"secondary\"\r\n                        aria-label=\"Add\"\r\n                        className={classes.button}\r\n                        onClick={this.handleClick}    \r\n                    >\r\n                        <AddIcon/>\r\n                    </Button>\r\n                </FormGroup>\r\n\r\n                <MaterialForm onSubmit={this.handleMaterialSubmit}/>\r\n                <ToolForm onSubmit={this.handleToolSubmit}/>\r\n                <Typography>Materiales Agregados:</Typography>\r\n                <List>\r\n                    {materiales.map(m => <ListItem>Material: {m.material}, Cantidad: {m.cantidad}</ListItem>)}\r\n                </List>\r\n                <Typography>Herramientas Agregadas:</Typography>\r\n                <List>\r\n                    {herramientas.map(h => <ListItem>Herramienta: {h}</ListItem>)}\r\n                </List>\r\n            </Card>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\nExpenseForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(ExpenseForm);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CheckBox from '@material-ui/core/Checkbox';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Card from '@material-ui/core/Card';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport ExpenseForm from './ExpenseForm'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\n\r\nconst styles = theme => ({\r\n  root:{\r\n      padding: '10px'\r\n  }\r\n});\r\n\r\nclass InvoiceForm extends React.Component {\r\n\r\n    state = {\r\n        nombre: '',\r\n        cedula: '',\r\n        impresa: false,\r\n        gastos: [],\r\n    };\r\n\r\n    handleChange = name => event => {\r\n        this.setState({ [name]: event.target.value });\r\n    };\r\n\r\n    handleExpenseSubmit = expense => {\r\n        this.setState((prevState) => {\r\n            return ({\r\n                gastos: [...prevState.gastos, expense]\r\n            });\r\n        });\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.onSubmit(this.state);\r\n        this.setState({\r\n            nombre: '',\r\n            cedula: '',\r\n            impresa: false,\r\n            gastos: []\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const { classes, onSubmit } = this.props;\r\n        const { nombre, cedula, impresa, gastos } = this.state;\r\n        return (\r\n            <Card className={classes.root}>\r\n                <Typography variant='h5'>Agregar factura: </Typography>\r\n                <FormGroup row>\r\n                    <TextField\r\n                        value={nombre}\r\n                        placeholder='Nombre'\r\n                        className={classes.input}\r\n                        inputProps={{\r\n                        'aria-label': 'Description',\r\n                        }}\r\n                        onChange={this.handleChange('nombre')}\r\n                    />\r\n                    <TextField\r\n                        value={cedula}\r\n                        placeholder='Cedula'\r\n                        defaultValue=\"Cedula\"\r\n                        className={classes.input}\r\n                        inputProps={{\r\n                        'aria-label': 'Description',\r\n                        }}\r\n                        onChange={this.handleChange('cedula')}\r\n                    />\r\n                    <InputLabel>Impresa:</InputLabel>\r\n                    <CheckBox \r\n                        value={impresa}\r\n                        onChange={this.handleChange('impresa')}\r\n                    />\r\n                    <Button \r\n                        variant=\"fab\"\r\n                        color=\"primary\"\r\n                        aria-label=\"Add\"\r\n                        className={classes.button}\r\n                        onClick={this.handleClick}    \r\n                    >\r\n                        <AddIcon />\r\n                    </Button>\r\n                </FormGroup>\r\n                <ExpenseForm onSubmit={this.handleExpenseSubmit}/>\r\n                <List>\r\n                    {gastos.map(g => <ListItem>Gasto por : {g.tipo}</ListItem>)}\r\n                </List>\r\n            </Card>\r\n        );\r\n    }\r\n  \r\n}\r\n\r\n\r\n\r\nInvoiceForm.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\nexport default withStyles(styles)(InvoiceForm);\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport invoices from './invoices.json';\nimport Grid from '@material-ui/core/Grid';\nimport Invoice from './Invoice';\nimport InvoiceForm from './InvoiceForm';\nimport Typography from '@material-ui/core/Typography';\n\n\nclass App extends Component {\n  state = {\n    invoices: invoices\n  };\n\n  handleSubmit = inv => {\n    this.setState((prevState) => {\n      const newInvoice = {\n        cliente: {\n          nombre: inv.nombre,\n          cedula: inv.cedula\n        },\n        impresa: inv.impresa,\n        gastos: inv.gastos\n      };\n      return ({\n        invoices: [...prevState.invoices, newInvoice]\n      })\n    })\n  }\n\n  render() {\n    const {invoices} = this.state;\n    return (\n      <Grid container alignItems='center' justify='center' direction='column'>\n        <Grid item>\n          <InvoiceForm onSubmit={this.handleSubmit}/>\n         </Grid>\n        {invoices.map(i =><Grid item> <Invoice {...i}></Invoice></Grid>)}\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'typeface-roboto';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}